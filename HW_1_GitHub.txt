Как отправить ДЗ на проверку.
 1. Создайте текстоовый файл как в первом ДЗ по Terminal.
 2. Сценарий перенесите в этот файл.
 3. На против каждого действия - напишите команду в GitBash

JSON
 4. Создать внешний репозиторий c названием JSON.         ===  git init
                                                               echo "new" >> README.md
                                                               git add .
                                                               git commit -m "first"
                                                               git remote add origin git@github.com:chaychits/JSON.git
                                                               curl -u 'chaychits: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' https://api.github.com/user/repos -d '{"name":"JSON"}'
                                                               git push -u origin master

                          
 5. Клонировать репозиторий JSON на локальный компьютер.  ===  git clone "https://github.com/chaychits/JSON.git" 

 6. Внутри локального JSON создать файл “new.json”.       ===  cd JSON 
 							       touch new.json

 7. Добавить файл под гит.                                ===  git add new.json

 8. Закоммитить файл.                                     ===  git commit -m "new.json"

 9. Отправить файл на внешний GitHub репозиторий.         ===  git push

 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON. 
                                                          ===  vim new.json
      i					    
      { "Фамилия" : "Чайчиц",
        "Имя" : "Марина",
        "Отчество" : "Александровна",
        "Возраст" : 34,
        "Количество домашних животных" : 1,
        "Будущая желаемая зарплата" :  "700 долларов"
      }
      esc  
      :wq

 11. Отправить изменения на внешний репозиторий.         === git add new.json
					                     git commit -m "new.json"	
                                                             git push

 12. Создать файл preferences.json                       === touch preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.                                                          === vim preferences.json
    i
    { "Любимыйй фильм" : "Знакомьтесь Джо Блэк",
      "Любимый сериал" : "Друзья",
      "Любимая еда" : "Морепродукты",
      "Любимое время года" : "Лето",
      "Сторона которую хотели бы посетить" : "США"
    }
    esc 
    :wq

14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON  
                                                          === vim sklls.json
    i
    { "Course" : "QA",
      "Skills" : "SQL, Postman, Github"
    }
    esc
    :wqg

 15. Отправить сразу 2 файла на внешний репозиторий.    === git add preferences.json sklls.json
             						 git commit -m "preferences.json sklls.json"
							 git push
 16. На веб интерфейсе создать файл bug_report.json.    ===  push the button - create new file
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе. === push the button - commit new file
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON. === push the button - edit this file

    { "Summary" : "When you click on the Send a message button in the completed feedback form, nothing happens. Similar behavior if the form is not filled out.",
      "Steps" : "1. Fill in the feedback form fields, 2. Click on the Send message button",
      "Expected result" : "The message is sent or the system reports that it cannot be sent.",
      "Actual result" : "The message is not sent, there is no error about sending. After pressing the button, nothing happens."
    }

 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.  ===  push the button - commit changes
 20. Синхронизировать внешний и локальный репозиторий JSON === git pull 


XML
 21. Создать внешний репозиторий c названием XML.       ===   git init
                                                              echo "new xml" >> README.md
                                                              git add .
                                                              git commit -m "second"
                                                              git remote add origin git@github.com:chaychits/XML.git
                                                              curl -u 'chaychits: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' https://api.github.com/user/repos -d '{"name":"XML"}'
                                                              git push -u origin master
 22. Клонировать репозиторий XML на локальный компьютер.  ===  git clone https://github.com/chaychits/XML.git
 23. Внутри локального XML создать файл “new.xml”.        ===  touch new.xml
 24. Добавить файл под гит.                               ===  git add new.xml
 25. Закоммитить файл.                                    ===  git commit -m "new.xml"
 26. Отправить файл на внешний GitHub репозиторий.        ===  git push 
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML. 
                                                          === vim new.xml
i
<?xml version="1.0" encoding="UTF-8"?>
<result>
	<website>
	  <Фамилия> Чайчиц </Фамилия> 
          <Имя> Марина </Имя>
          <Отчество> Александровна </Отчество>
          <Возраст> 34 </Возраст>
          <Количество_домашних_животных> 1 </Количество_домашних_животных> 
          <Будущая_желаемая_зарплата> 700 $ </Будущая_желаемая_зарплата>
	</website>
</result>
esc
:wq
28. Отправить изменения на внешний репозиторий.          === git add .
                                                             git commit -m "4"
                                                             git push
 29. Создать файл preferences.xml                        === touch preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.                                                           ===  vim preferences.xml
i
<?xml version="1.0" encoding="UTF-8"?>
<result>
	<website>
	   <Любимыйй_фильм> Знакомьтесь Джо Блэк </Любимыйй_фильм>
           <Любимый_сериал> Друзья </Любимый_сериал>
           <Любимая_еда> Морепродукты </Любимая_еда>
           <Любимое_время_года> Лето </Любимое_время_года>
           <Сторона_которую_хотели_бы_посетить> США </Сторона_которую_хотели_бы_посетить>
	</website>
</result>
esc:wq

 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML  === cat sklls.xml
<?xml version="1.0" encoding="UTF-8"?>
<result>
	<website>
	  <Course> QA </Course>
          <Skills> SQL, Postman, Github </Skills>
	</website>
</result> 
 32. Сделать коммит в одну строку.  ===  git add sklls.xml preferences.xml | git commit -m "1" 

 33. Отправить сразу 2 файла на внешний репозиторий.  ===  git push

 34. На веб интерфейсе создать файл bug_report.xml.  === push button - create new file

 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе. === push button - commit new file

 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML. ===  push button - edit this file 
<?xml version="1.0" encoding="UTF-8"?>
<result>
	<website>
	  <Summary> When you click on the Send a message button in the completed feedback form, nothing happens. Similar behavior if the form is not filled out. </Summary>
          <Steps> 1. Fill in the feedback form fields, 2. Click on the Send message button </Steps>
          <Expected_result> The message is sent or the system reports that it cannot be sent. </Expected_result>
          <Actual_result> The message is not sent, there is no error about sending. After pressing the button, nothing happens. </Actual_result> 
	</website>
</result> 
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.  ===  push button - commit changes

 38. Синхронизировать внешний и локальный репозиторий XML ===  git pull

TXT
 1. Создать внешний репозиторий c названием TXT.  ===   git init
                                                        echo "new txt" >> README.md
                                                        git add .
                                                        git commit -m "fifth"
                                                        git remote add origin git@github.com:chaychits/TXT.git
                                                        curl -u 'chaychits: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' https://api.github.com/user/repos -d '{"name":"TXT"}'
                                                        git push -u origin master

 2. Клонировать репозиторий TXT на локальный компьютер.  ==== git clone https://github.com/chaychits/TXT.git

 3. Внутри локального TXT создать файл “new.txt”.        ====  cd TXT
						              touch new.txt

 4. Добавить файл под гит.                               ==== git add new.txt

 5. Закоммитить файл.                                    ==== commit -m "new.txt"

 6. Отправить файл на внешний GitHub репозиторий.        ====  git push

 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.  
                                                        ===  vim new.txt 
i                         Чайчиц Марина Александровна, 32 года, 1 домашее животное, 700 $ будущая желаемая зарплата.
esc :wq
 8. Отправить изменения на внешний репозиторий.          ===   git commit -am "a"
                                                               git push

 9. Создать файл preferences.txt                         ====  touch preferences.txt

 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.                                                           ====  vim preferences.txt
  i
Любимый фильм - Знакомьтесь Джо Блэк, любимый сериал - Друзья, любимая еда - морепродукты, любимое время года - лето, сторона которую хотели бы посетить - США.
  esc :wq

 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT  === touch sklls.txt

 12. Сделать коммит в одну строку.                       === git add preferences.txt sklls.txt | git commit -m "add preferences.txt sklls.txt" 

 13. Отправить сразу 2 файла на внешний репозиторий.     ===  git push

 14. На веб интерфейсе создать файл bug_report.txt.      ==== push the button - create new file

 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.  === push the button - commit changes

 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.  === push the button - edit the file 

Summary -  When you click on the Send a message button in the completed feedback form, nothing happens. Similar behavior if the form is not filled out.
Steps - 1. Fill in the feedback form fields
        2. Click on the Send message button.
Expected result - The message is sent or the system reports that it cannot be sent.
Actual result - The message is not sent, there is no error about sending. After pressing the button, nothing happens.

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.  ===  push the button - commit changes

 18. Синхронизировать внешний и локальный репозиторий TXT === git pull